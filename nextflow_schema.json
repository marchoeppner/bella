{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/marchoeppner/bella//nextflow_schema.json",
  "title": "marchoeppner/bella pipeline parameters",
  "description": "BELLA Pipeline for outbreak analysis",
  "type": "object",
  "$defs": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["input", "outdir"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_input.json",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Path to tab-separated file containing information about the samples in the experiment.",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open",
          "default": "results"
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/input_output_options"
    },
    {
      "$ref": "#/$defs/generic_options"
    }
  ],
  "properties": {
    "species": {
      "type": "string",
      "description": "Short-hand for a pre-installed schema (campylobacter, escherichia, listeria, salmonella)"
    },
    "efsa": {
      "type": "boolean",
      "fa_icon": "fas fa-filter",
      "description": "Flag to use EFSA schema, if available"
    },
    "schema": {
      "type": "string",
      "fa_icon": "fas fa-folder-open",
      "description": "A (local) chewbbaca schema folder"
    },
    "metadata": {
      "type": "string",
      "fa_icon": "fas fa-file-import",
      "description": "ReporTree metadata file in TSV format."
    },
    "nomenclature": {
      "type": "string",
      "fa_icon": "fas fa-file-import",
      "description": "ReporTree nomenclature file in TSV format"
    },
    "partitions": {
      "type": "string",
      "default": "stability_regions",
      "fa_icon": "fas fa-file-import",
      "description": "List of partitions to analyze"
    },
    "distance": {
      "type": "integer",
      "default": 7,
      "description": "A custom clustering distance to use for visualization in the report."
    },
    "run_name": {
      "type": "string",
      "fa_icon": "fas fa-filter",
      "description": "A descriptive name for this run"
    },
    "reference_base": {
      "type": "string",
      "fa_icon": "fas fa-folder-open",
      "description": "The location where the pipeline references have been installed to"
    },
    "reference_version": {
      "type": "string",
      "default": 1,
      "hidden": true,
      "fa_icon": "fas fa-filter"
    },
    "build_references": {
      "type": "boolean",
      "description": "Flag to start reference installation"
    },
    "logo": {
      "type": "string",
      "default": "/home/marc/git/bella/assets/pipelinelogo.png"
    },
    "plaintext_email": {
      "type": "boolean",
      "hidden": true
    },
    "skip_multiqc": {
      "type": "boolean"
    },
    "email": {
      "type": "boolean",
      "hidden": true
    },
    "maxMultiqcEmailFileSize": {
      "type": "string",
      "default": "25 MB",
      "hidden": true
    },
    "multiqc_config": {
      "type": "string",
      "default": "/home/marc/git/bella/conf/multiqc_config.yaml",
      "hidden": true
    },
    "multiqc_logo": {
      "type": "string",
      "default": "/home/marc/git/bella/assets/pipelinelogo.png",
      "hidden": true
    },
    "publish_dir_mode": {
      "type": "string",
      "default": "copy"
    },
    "custom_config_base": {
      "type": "string",
      "default": "https://raw.githubusercontent.com/bio-raum/nf-configs/main",
      "hidden": true
    },
    "reportree_loci_called": {
      "type": "number",
      "default": 0.95,
      "fa_icon": "fas fa-filter",
      "description": "Fraction of usable loci required for a sample to be included"
    },
    "template": {
      "type": "string",
      "default": "/home/marc/git/bella/assets/bella_template.html"
    },
    "parallel_calling": {
      "type": "boolean",
      "description": "Perform parallelized allele calling. Faster for large datasets."
    }
  },
  "required": ["partitions", "distance", "run_name", "reference_base", "reference_version"]
}
